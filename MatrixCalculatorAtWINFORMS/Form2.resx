<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>